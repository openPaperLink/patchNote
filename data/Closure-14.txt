The bug is caused by using the incorrect branch type, `Branch.UNCOND`, when creating edges in the control flow graph (CFG) for `finally` blocks. These edges should be marked with `Branch.ON_EX` to indicate they execute only under exceptional conditions. As a consequence, this incorrect branching leads to an invalid CFG representation, causing tools like optimizers and analyzers to misinterpret execution paths, particularly in nested `try-finally` constructs. Evidence of this bug is found in the `testDeepNestedFinally` unit test, which checks that control edges under exceptional flows are correctly labeled. The test fails to distinguish between exceptional and non-exceptional paths before the patch. To fix the bug, the branch type in `cfa.createEdge()` should be changed from `Branch.UNCOND` to `Branch.ON_EX`, ensuring that exceptional edges are accurately represented in the CFG.